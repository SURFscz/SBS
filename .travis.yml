---
language: 'python'

services:
  - 'mysql'

dist: xenial

notifications:
  slack:
    on_success: always
    on_failure: always
    rooms:
      secure: 'Md5TZWMvWo4n4ySNT1H1aZiwbERUI1UUQxy5+IQTEf4KG+EFiqdoEYzOHFObb4bxAirOsB6dbAxLyLtmn\
               3TD4Q1lkJ2Xg6SH4BykC1qETRSIf6XOwdCIQgQuUJhMng30yawpLSqa5Nlx50aIlUi6+Y6WaD3JkDD199\
               i7XzMxsvAcA23/A6/mxqIWZiTzcy43a+Voby27ts+ind6SQYib6nq2rZAYVuU+C0xsaWGHiVVVKpRqO+a\
               cRAYPTQGt8G9kzuFGtNTvdHn4uWDBmBDEecX40dlVo1WtH/2sOhQRAnjM612jfyVeXmJr+YpA30RKNMa6\
               PJ8sKDWU4+hrsxloDZDpTWQwbvrcb7/njPpb44kcUOCjNn2RFJgKvz0Xh535LC6FemQS5eka3M+Cuh50c\
               g1Cm0vdt0+I5NZNd5KlcNPTXWBlWPdB6CORt99tlOwFmXXyfewpDOTER93xzZQS08z6cO7WDR3ag90ntI\
               Em9+JMZqFskmbelrTpxA/BJQrhsE+PGkSXpfMqDmb3vozq+QiyL6Ggib90jR3N9ddHqD+J3Lxc4PrYdAw\
               F8Qc6q7fAt4nAyOm2wsMLZJgmpwjrJTF9DSzz0avY/iFnIDdtxN+NxjMA0n4nazA0+DHvM1l/A0JmuDff\
               i2n+bw4wTyMHb5IU1w1NnEpZEd3oy5/q4/k='

# generic mysql init snippet for reuse below
.mysql_init: &mysql_init
  >
    mysql -uroot -e "
      DROP DATABASE IF EXISTS sbs_test;
      CREATE DATABASE IF NOT EXISTS sbs_test;
      CREATE USER 'sbs'@'localhost' IDENTIFIED BY 'sbs';
      GRANT ALL PRIVILEGES ON *.* TO 'sbs'@'localhost' WITH GRANT OPTION;
    "

stages:
  - 'flake8'
  - 'test'
  - 'coverage'
  - 'build'

#############################################################
# default stage "test" expanded with multiple python versions
#############################################################
#python:
#  - '3.7'
#  - '3.5'
#  - '3.8-dev'
#matrix:
#  allow_failures:
#  - python: '3.8-dev'
#cache:
#  pip: true
#install:
#  - 'pip install -r ./server/requirements/test.txt'
#script:
#  - *mysql_init
#  - 'pytest server/test'


#############################################################
# other stages
#############################################################
jobs:
  include:
    - stage: 'flake8'
      services: false
      install:
        - 'pip install flake8'
      script:
        - 'flake8 ./server/'
      after_success: false

    - stage: 'coverage'
      install:
        - 'pip install -r ./server/requirements/test.txt'
        - 'pip install codecov'
      script:
        - *mysql_init
        - 'pytest --cov=server server/test'
      after_success:
        - 'codecov --token=$CODECOV_TOKEN'

    - stage: 'build'
      cache:
        yarn: true
        directories:
          - 'node_modules'
      services:
        - 'docker'
      before_install:
        - 'rm -fr ~/.yarn'
      install:
        - 'curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.19.1'
        - 'export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"'
        - 'yarn -v'
        - 'nvm install v8.12.0'
        - 'nvm use v8.12.0'
      before_script:
        - 'yarn -v'
        - 'node -v'
      script:
        - 'cd client'
        - 'yarn install'
        - 'CI=true yarn test'
        - 'yarn build'

