database:
  uri: "mysql+mysqldb://sbs:sbs@127.0.0.1/sbs_test?charset=utf8mb4"

secret_key: secret
# Must be a base64 encoded key of 128, 192, or 256 bits.
# Hint: base64.b64encode(AESGCM.generate_key(bit_length=256)).decode() or
#  base64.b64encode(os.urandom(256 // 8)).decode()
encryption_key: 3Kw2sDznh4jSZsShUcsxgfeOkaaKE8TC24OWJ1KWeDs=

# Lifetime of session in minutes (one day is 60 * 24)
permanent_session_lifetime: 1440

redis:
  uri: redis://localhost:6379/

socket_url: "127.0.0.1:8080/"

api_users:
  - name: "sysadmin"
    password: "secret"
    scopes: [ "read", "write", "system", "ipaddress", "stats" ]
  - name: "sysread"
    password: "secret"
    scopes: [ read ]
  - name: "research_cloud"
    password: "secret"
    scopes: [ "restricted_co" ]
  - name: "ipaddress"
    password: "secret"
    scopes: [ "ipaddress" ]

oidc:
  client_id: sram
  client_secret: secret
  audience: https://proxy.acc.sram.eduteams.org
  authorization_endpoint: http://localhost:9001/authorize
  token_endpoint: http://localhost:9001/token
  userinfo_endpoint: http://localhost:9001/userinfo
  jwks_endpoint: http://localhost:9001/jwks
  #Note that the paths for these  uri's is hardcoded and only domain and port differ per environment
  redirect_uri: http://localhost:8080/api/users/resume-session
  sfo_eduteams_redirect_uri: http://localhosst:9001/sfo
  continue_eduteams_redirect_uri: https://proxy.acc.sram.eduteams.org/continue
  second_factor_authentication_required: True
  totp_token_name: "SRAM local"
  # The client_id of SBS. Most likely to equal the oidc.client_id
  sram_service_entity_id: sram


  scopes:
    - profile
    - eduperson_scoped_affiliation
    - voperson_external_affiliation
    - email
    - ssh_public_key
    - eduperson_orcid
    - uid
    - voperson_external_id
    - eduperson_entitlement
    - eduperon_assurance
    - openid
    - eduperson_principal_name
    - voperson_id

base_scope: "test.sbs.local"
entitlement_group_namespace: "urn:example:sbs"
eppn_scope: "test.sram.surf.nl"
collaboration_creation_allowed_entitlement: "urn:example:sbs:allow-create-co"

environment_disclaimer: "local"

mail:
  host: localhost
  port: 1025
  sender_name: SURF_ResearchAccessManagement
  sender_email: no-reply@surf.nl
  suppress_sending_mails: False
  info_email: sram-support@surf.nl
  beheer_email: sram-beheer@surf.nl
  ticket_email: sram-support@surf.nl
  eduteams_email: support+sram@eduteams.org
  # Do we mail a summary of new Organizations and Services to the beheer_email?
  audit_trail_notifications_enabled: True
  account_deletion_notifications_enabled: True
  send_exceptions: False
  send_js_exceptions: False
  send_exceptions_recipients: [ "sram-support@surf.nl" ]
  environment: local

aup:
  version: 1
  url_aup_en: https://edu.nl/6wb63
  url_aup_nl: https://edu.nl/6wb63

base_url: http://localhost:3000
base_server_url: http://localhost:8080
wiki_link: https://edu.nl/vw3jx

admin_users:
  - uid: "urn:john"
  - uid: "urn:rocky"
  - uid: "urn:mike"
  - uid: "900613f87a9c8539b15729264ccc50af20c865ba@acc.sram.eduteams.org"

organisation_categories:
  - "Research"
  - "University"
  - "Medical"

feature:
  seed_allowed: True
  api_keys_enabled: True
  feedback_enabled: True
  impersonation_allowed: True
  sbs_swagger_enabled: True
  admin_platform_backdoor_totp: True
  past_dates_allowed: True
  mock_scim_enabled: True

# The retention config determines how long users may be inactive, how long the reminder magic link is valid and when do we resent the magic link
retention:
  allowed_inactive_period_days: 365
  reminder_suspend_period_days: 7
  remove_suspended_users_period_days: 90
  reminder_expiry_period_days: 7
  cron_hour_of_day: 7
  admin_notification_mail: True

metadata:
  idp_url: "file://data/idps-metadata.xml"
  parse_at_startup: False

service_bus:
  enabled: False
  host: "localhost"
  client_id: "sbs"
  user: "sbs"
  password: "changethispassword"

# note: all cron hours below are in UTC
platform_admin_notifications:
  # Do we daily check for CO join_requests and CO requests and send a summary mail to beheer_email?
  enabled: True
  cron_hour_of_day: 11
  # How long before we include open join_requests in the summary
  outstanding_join_request_days_threshold: 7
  # How long before we include open CO requests in the summary
  outstanding_coll_request_days_threshold: 7

user_requests_retention:
  # Do we daily check for CO join_requests and CO requests and delete approved and denied?
  enabled: True
  cron_hour_of_day: 10
  # How long before we delete approved / denied join_requests
  outstanding_join_request_days_threshold: 21
  # How long before we delete approved / denied CO requests
  outstanding_coll_request_days_threshold: 21

collaboration_expiration:
  # Do we daily check for CO's that will be deleted because they have been expired?
  enabled: True
  cron_hour_of_day: 10
  # How long after expiration do we actually delete expired collaborations
  expired_collaborations_days_threshold: 90
  # How many days before actual expiration do we mail the organisation members
  expired_warning_mail_days_threshold: 5

collaboration_suspension:
  # Do we daily check for CO's that will be suspended because of inactivity?
  enabled: True
  cron_hour_of_day: 10
  # After how many days of inactivity do we suspend collaborations
  collaboration_inactivity_days_threshold: 360
  # How many days before actual suspension do we mail the organisation members
  inactivity_warning_mail_days_threshold: 5
  # After how many days after suspension do we actually delete the collaboration
  collaboration_deletion_days_threshold: 90

membership_expiration:
  # Do we daily check for memberships that will be deleted because they have been expired?
  enabled: True
  cron_hour_of_day: 10
  # How long after expiration do we actually delete expired memberships
  expired_memberships_days_threshold: 90
  # How many days before actual expiration do we mail the co admin and member
  expired_warning_mail_days_threshold: 14

invitation_reminders:
  # Do we daily check for invitations that need a reminder?
  enabled: True
  cron_hour_of_day: 10
  # How long before expiration of an invitation do we remind the user?
  invitation_reminders_threshold: 5

orphan_users:
  # Do we daily check for users that are orphans?
  enabled: True
  cron_hour_of_day: 10
  # How long after created do we delete orphan users
  delete_days_threshold: -1

scim_sweep:
  # Do we enable scim sweeps?
  enabled: False
  # How often do we check if scim sweeps are needed per service
  cron_minutes_expression: "*/15"

ldap:
  url: "ldap://ldap.example.com/dc=example,dc=com"
  bind_account: "cn=admin,dc=entity_id,dc=services,dc=sram-tst,dc=surf,dc=nl"

# A MFA login in a different flow is valid for X minutes
mfa_sso_time_in_minutes: 10

# whether to require TOTP for users form IdPs that match neither mfa_idp_allowed
# nor ssid_identity_providers
mfa_fallback_enabled: true

# Lower case schachome organisations / entity ID's allowed skipping MFA;
# MFA is supposed to be handled at the IdP for these entities
mfa_idp_allowed:
  - schac_home: "idp.test"
    entity_id: "https://idp.test"
  - schac_home: "erroridp.example.edu"
    entity_id: "https://erroridp.example.edu"
  - schac_home: "only_sho"
  - entity_id: "https://only_entityid"

# Lower case schachome organisations / entity ID's where SURFSecure ID is used for step-up
# If this feature is no longer needed, just replace the value with an empty list []
ssid_identity_providers:
  - schac_home: "ssid.org"
    entity_id: "https://ssid.org"
  - schac_home: "erroridp.example.edu"
    entity_id: "https://erroridp.example.edu"

ssid_config_folder: saml_test

pam_web_sso:
  session_timeout_seconds: 300

rate_limit_totp_guesses_per_30_seconds: 10

# The uid's of user that will never be suspended or deleted
excluded_user_accounts:
  - uid: "urn:paul"
  - uid: "urn:peter"